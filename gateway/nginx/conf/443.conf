pid /tmp/nginx.pid;

worker_processes    auto;

events { worker_connections 1024; }

        
http {
server {
	client_body_temp_path /tmp/client_temp;
        proxy_temp_path       /tmp/proxy_temp_path;
        fastcgi_temp_path     /tmp/fastcgi_temp;
        uwsgi_temp_path       /tmp/uwsgi_temp;
        scgi_temp_path        /tmp/scgi_temp;
        
	listen 443 ssl default_server;
	listen [::]:443 ssl default_server;
	

    ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key;
    ssl_protocols TLSv1.3;
        
	# root /var/www/tg_webapp;

	index index.html index.htm index.nginx-debian.html;

	server_name _;

	location /template/api/ {
        proxy_pass http://webapp_back:8080/;    # 8080 fastapi running port inside container
	    proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect off;
        proxy_buffering off;
    }

    location /template/socket.io/ {
        proxy_pass http://webapp_back:8080/socket.io/;    # 8080 fastapi running port inside container
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /template/ {
        # try_files $uri $uri/ =404;
        proxy_pass http://webapp_front/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_redirect off;
        proxy_buffering off;
    }

        location /hook_path/ {
        proxy_pass http://bot:8000/;    # 8000 webhook running port inside container
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_redirect off;
        proxy_buffering off;
    }
  }
}
